// knights of the round table
table.resultsTable.table
  thead
    tr
      th.number #
      th.nick IRC Nick
      th.requestsSoFar HTTP requests made
      th.timeTaken Time taken to capture flag
      th.chunksSoFar Chunks so far
  tbody
    - k = 0
    - each participant, k in participants
      tr.resultsRow(data-participant=participant.nick)
        td.number
          a(name=participant.nick)
          = k+1
        td.nick= participant.nick
        td.requestsSoFar= participant.requests
        - if (participant.time) {
          td.timeTaken= participant.time/1000
        - } else if (participant.deleted) {
          td.timeTaken
            abbr(title="Did not finish: left after they started capturing") DNF
        - } else {
          td.timeTaken
            small N/A
        - }
        td.chunksSoFar= participant.chunkTimes.length
      - participantClass = "participant-" + encodeURIComponent(participant.nick)
      tr.extraData(class=participantClass)
        td
        td(colspan=4)
          div
            span
              | Lock grabbed: 
              i= participant.locks
              |  times.<br>
            span
              | User agent: 
              i= participant.agent
              | .<br><br>
            b Chunk Breakdown
            table.chunkBreakdown.table
              thead
                tr
                  th.number #
                  th.seconds Seconds
                  th.cumSeconds Cumulative Seconds
                  th.requests Requests
                  th.cumRequests Cumulative Requests
              tbody
                - var cS = 0, cR = 0
                - for (var i = 0; i < participant.chunkTimes.length; i++) {
                  tr
                    td.number= i+1
                    td.seconds= participant.chunkTimes[i]/1000
                    td.cumSeconds= (cS += participant.chunkTimes[i])/1000
                    td.requests= participant.chunkReqs[i]
                    td.cumRequests= (cR += participant.chunkReqs[i])
                - }